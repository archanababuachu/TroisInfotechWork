<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="7" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-10-04T17:11:35 IST" name="Suite" finished-at="2022-10-04T17:11:54 IST" duration-ms="18875">
    <groups>
    </groups>
    <test started-at="2022-10-04T17:11:35 IST" name="Test" finished-at="2022-10-04T17:11:54 IST" duration-ms="18875">
      <class name="com.demoproject.tests.LoginTest">
        <test-method is-config="true" signature="launch(java.lang.String)[pri:0, instance:com.demoproject.tests.LoginTest@563f38c4]" started-at="2022-10-04T17:11:36 IST" name="launch" finished-at="2022-10-04T17:11:48 IST" duration-ms="12428" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launch -->
        <test-method is-config="true" signature="invokeLoginPage()[pri:0, instance:com.demoproject.tests.LoginTest@563f38c4]" started-at="2022-10-04T17:11:48 IST" name="invokeLoginPage" finished-at="2022-10-04T17:11:48 IST" duration-ms="250" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invokeLoginPage -->
        <test-method signature="verifyExpectedURLisLaunched()[pri:0, instance:com.demoproject.tests.LoginTest@563f38c4]" started-at="2022-10-04T17:11:48 IST" name="verifyExpectedURLisLaunched" finished-at="2022-10-04T17:11:48 IST" duration-ms="54" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyExpectedURLisLaunched -->
        <test-method is-config="true" signature="invokeLoginPage()[pri:0, instance:com.demoproject.tests.LoginTest@563f38c4]" started-at="2022-10-04T17:11:48 IST" name="invokeLoginPage" finished-at="2022-10-04T17:11:48 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invokeLoginPage -->
        <test-method signature="validateLoginPageFieldsAreDisplayed()[pri:1, instance:com.demoproject.tests.LoginTest@563f38c4]" started-at="2022-10-04T17:11:48 IST" name="validateLoginPageFieldsAreDisplayed" finished-at="2022-10-04T17:11:49 IST" duration-ms="166" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateLoginPageFieldsAreDisplayed -->
        <test-method is-config="true" signature="invokeLoginPage()[pri:0, instance:com.demoproject.tests.LoginTest@563f38c4]" started-at="2022-10-04T17:11:49 IST" name="invokeLoginPage" finished-at="2022-10-04T17:11:49 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invokeLoginPage -->
        <test-method signature="verifyLoginPageAttributeValues()[pri:2, instance:com.demoproject.tests.LoginTest@563f38c4]" started-at="2022-10-04T17:11:49 IST" name="verifyLoginPageAttributeValues" finished-at="2022-10-04T17:11:50 IST" duration-ms="1828" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginPageAttributeValues -->
        <test-method is-config="true" signature="invokeLoginPage()[pri:0, instance:com.demoproject.tests.LoginTest@563f38c4]" started-at="2022-10-04T17:11:50 IST" name="invokeLoginPage" finished-at="2022-10-04T17:11:50 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invokeLoginPage -->
        <test-method signature="validateAllInvalidLogin(java.lang.String,java.lang.String,java.lang.String)[pri:3, instance:com.demoproject.tests.LoginTest@563f38c4]" started-at="2022-10-04T17:11:50 IST" name="validateAllInvalidLogin" data-provider="Credentials" finished-at="2022-10-04T17:11:51 IST" duration-ms="518" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Epic sadface: Username is required]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAllInvalidLogin -->
        <test-method is-config="true" signature="invokeLoginPage()[pri:0, instance:com.demoproject.tests.LoginTest@563f38c4]" started-at="2022-10-04T17:11:51 IST" name="invokeLoginPage" finished-at="2022-10-04T17:11:51 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invokeLoginPage -->
        <test-method signature="validateAllInvalidLogin(java.lang.String,java.lang.String,java.lang.String)[pri:3, instance:com.demoproject.tests.LoginTest@563f38c4]" started-at="2022-10-04T17:11:51 IST" name="validateAllInvalidLogin" data-provider="Credentials" finished-at="2022-10-04T17:11:51 IST" duration-ms="469" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[standard_use]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauc]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Epic sadface: Username and password do not match any user in this service]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAllInvalidLogin -->
        <test-method is-config="true" signature="invokeLoginPage()[pri:0, instance:com.demoproject.tests.LoginTest@563f38c4]" started-at="2022-10-04T17:11:51 IST" name="invokeLoginPage" finished-at="2022-10-04T17:11:51 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invokeLoginPage -->
        <test-method signature="validateAllInvalidLogin(java.lang.String,java.lang.String,java.lang.String)[pri:3, instance:com.demoproject.tests.LoginTest@563f38c4]" started-at="2022-10-04T17:11:51 IST" name="validateAllInvalidLogin" data-provider="Credentials" finished-at="2022-10-04T17:11:52 IST" duration-ms="516" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[standard_us]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Epic sadface: Username and password do not match any user in this service]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAllInvalidLogin -->
        <test-method is-config="true" signature="invokeLoginPage()[pri:0, instance:com.demoproject.tests.LoginTest@563f38c4]" started-at="2022-10-04T17:11:52 IST" name="invokeLoginPage" finished-at="2022-10-04T17:11:52 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invokeLoginPage -->
        <test-method signature="validateAllInvalidLogin(java.lang.String,java.lang.String,java.lang.String)[pri:3, instance:com.demoproject.tests.LoginTest@563f38c4]" started-at="2022-10-04T17:11:52 IST" name="validateAllInvalidLogin" data-provider="Credentials" finished-at="2022-10-04T17:11:52 IST" duration-ms="478" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[standard_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauc]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Epic sadface: Username and password do not match any user in this service]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAllInvalidLogin -->
        <test-method is-config="true" signature="invokeLoginPage()[pri:0, instance:com.demoproject.tests.LoginTest@563f38c4]" started-at="2022-10-04T17:11:52 IST" name="invokeLoginPage" finished-at="2022-10-04T17:11:52 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invokeLoginPage -->
        <test-method signature="verifyValidLogin()[pri:4, instance:com.demoproject.tests.LoginTest@563f38c4]" started-at="2022-10-04T17:11:52 IST" name="verifyValidLogin" finished-at="2022-10-04T17:11:53 IST" duration-ms="479" status="FAIL">
          <exception class="java.lang.Exception">
            <message>
              <![CDATA[checkElementDisplayed (ValidationActionHelper) : no such element: Unable to locate element: {"method":"xpath","selector":"//span[text()='Products']"}
  (Session info: chrome=106.0.5249.91)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'BABU', ip: '192.168.1.6', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [3c520d8cf70da7996483b02c88b4748d, findElement {using=xpath, value=//span[text()='Products']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 106.0.5249.91, chrome: {chromedriverVersion: 106.0.5249.61 (511755355844..., userDataDir: C:\Users\BABUVA~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:51278}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:51278/devtoo..., se:cdpVersion: 106.0.5249.91, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 3c520d8cf70da7996483b02c88b4748d]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Exception: checkElementDisplayed (ValidationActionHelper) : no such element: Unable to locate element: {"method":"xpath","selector":"//span[text()='Products']"}
  (Session info: chrome=106.0.5249.91)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'BABU', ip: '192.168.1.6', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [3c520d8cf70da7996483b02c88b4748d, findElement {using=xpath, value=//span[text()='Products']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 106.0.5249.91, chrome: {chromedriverVersion: 106.0.5249.61 (511755355844..., userDataDir: C:\Users\BABUVA~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:51278}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:51278/devtoo..., se:cdpVersion: 106.0.5249.91, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 3c520d8cf70da7996483b02c88b4748d
at com.demoproject.actions.ValidationActionHelper.isElementVisible(ValidationActionHelper.java:20)
at com.demoproject.pages.LoginPage.isHomePageDisplayed(LoginPage.java:80)
at com.demoproject.tests.LoginTest.verifyValidLogin(LoginTest.java:82)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Exception -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyValidLogin -->
        <test-method is-config="true" signature="quit()[pri:0, instance:com.demoproject.tests.LoginTest@563f38c4]" started-at="2022-10-04T17:11:53 IST" name="quit" finished-at="2022-10-04T17:11:54 IST" duration-ms="688" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
      </class> <!-- com.demoproject.tests.LoginTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
